if ("undefined" == typeof jQuery) throw Error("Bootstrap's JavaScript requires jQuery"); +
function(b) {
    b.fn.emulateTransitionEnd = function(c) {
        var f = !1,
            a = this;
        b(this).one(b.support.transition.end, function() {
            f = !0
        });
        return setTimeout(function() {
            f || b(a).trigger(b.support.transition.end)
        }, c), this
    };
    b(function() {
        var c = b.support;
        a: {
            var f = document.createElement("bootstrap");
            var a = {
                    WebkitTransition: "webkitTransitionEnd",
                    MozTransition: "transitionend",
                    OTransition: "oTransitionEnd otransitionend",
                    transition: "transitionend"
                },
                d;
            for (d in a)
                if (void 0 !== f.style[d]) {
                    f = {
                        end: a[d]
                    };
                    break a
                } f = !1
        }
        c.transition =
            f
    })
}(jQuery); +
function(b) {
    var c = function(a) {
        b(a).on("click", '[data-dismiss="alert"]', this.close)
    };
    c.prototype.close = function(a) {
        function d() {
            c.trigger("closed.bs.alert").remove()
        }
        var e = b(this),
            g = e.attr("data-target");
        g || (g = e.attr("href"), g = g && g.replace(/.*(?=#[^\s]*$)/, ""));
        var c = b(g);
        a && a.preventDefault();
        c.length || (c = e.hasClass("alert") ? e : e.parent());
        c.trigger(a = b.Event("close.bs.alert"));
        a.isDefaultPrevented() || (c.removeClass("in"), b.support.transition && c.hasClass("fade") ? c.one(b.support.transition.end, d).emulateTransitionEnd(150) :
            d())
    };
    var f = b.fn.alert;
    b.fn.alert = function(a) {
        return this.each(function() {
            var d = b(this),
                e = d.data("bs.alert");
            e || d.data("bs.alert", e = new c(this));
            "string" == typeof a && e[a].call(d)
        })
    };
    b.fn.alert.Constructor = c;
    b.fn.alert.noConflict = function() {
        return b.fn.alert = f, this
    };
    b(document).on("click.bs.alert.data-api", '[data-dismiss="alert"]', c.prototype.close)
}(jQuery); +
function(b) {
    var c = function(a, d) {
        this.$element = b(a);
        this.options = b.extend({}, c.DEFAULTS, d);
        this.isLoading = !1
    };
    c.DEFAULTS = {
        loadingText: "loading..."
    };
    c.prototype.setState = function(a) {
        var d = this.$element,
            e = d.is("input") ? "val" : "html",
            c = d.data();
        a += "Text";
        c.resetText || d.data("resetText", d[e]());
        d[e](c[a] || this.options[a]);
        setTimeout(b.proxy(function() {
                "loadingText" == a ? (this.isLoading = !0, d.addClass("disabled").attr("disabled", "disabled")) : this.isLoading && (this.isLoading = !1, d.removeClass("disabled").removeAttr("disabled"))
            },
            this), 0)
    };
    c.prototype.toggle = function() {
        var a = !0,
            b = this.$element.closest('[data-toggle="buttons"]');
        if (b.length) {
            var e = this.$element.find("input");
            "radio" == e.prop("type") && (e.prop("checked") && this.$element.hasClass("active") ? a = !1 : b.find(".active").removeClass("active"));
            a && e.prop("checked", !this.$element.hasClass("active")).trigger("change")
        }
        a && this.$element.toggleClass("active")
    };
    var f = b.fn.button;
    b.fn.button = function(a) {
        return this.each(function() {
            var d = b(this),
                e = d.data("bs.button"),
                g = "object" ==
                typeof a && a;
            e || d.data("bs.button", e = new c(this, g));
            "toggle" == a ? e.toggle() : a && e.setState(a)
        })
    };
    b.fn.button.Constructor = c;
    b.fn.button.noConflict = function() {
        return b.fn.button = f, this
    };
    b(document).on("click.bs.button.data-api", "[data-toggle^=button]", function(a) {
        var d = b(a.target);
        d.hasClass("btn") || (d = d.closest(".btn"));
        d.button("toggle");
        a.preventDefault()
    })
}(jQuery); +
function(b) {
    var c = function(a, d) {
        this.$element = b(a);
        this.$indicators = this.$element.find(".carousel-indicators");
        this.options = d;
        this.paused = this.sliding = this.interval = this.$active = this.$items = null;
        "hover" == this.options.pause && this.$element.on("mouseenter", b.proxy(this.pause, this)).on("mouseleave", b.proxy(this.cycle, this))
    };
    c.DEFAULTS = {
        interval: 5E3,
        pause: "hover",
        wrap: !0
    };
    c.prototype.cycle = function(a) {
        return a || (this.paused = !1), this.interval && clearInterval(this.interval), this.options.interval && !this.paused &&
            (this.interval = setInterval(b.proxy(this.next, this), this.options.interval)), this
    };
    c.prototype.getActiveIndex = function() {
        return this.$active = this.$element.find(".item.active"), this.$items = this.$active.parent().children(), this.$items.index(this.$active)
    };
    c.prototype.to = function(a) {
        var d = this,
            e = this.getActiveIndex();
        return a > this.$items.length - 1 || 0 > a ? void 0 : this.sliding ? this.$element.one("slid.bs.carousel", function() {
            d.to(a)
        }) : e == a ? this.pause().cycle() : this.slide(a > e ? "next" : "prev", b(this.$items[a]))
    };
    c.prototype.pause = function(a) {
        return a || (this.paused = !0), this.$element.find(".next, .prev").length && b.support.transition && (this.$element.trigger(b.support.transition.end), this.cycle(!0)), this.interval = clearInterval(this.interval), this
    };
    c.prototype.next = function() {
        return this.sliding ? void 0 : this.slide("next")
    };
    c.prototype.prev = function() {
        return this.sliding ? void 0 : this.slide("prev")
    };
    c.prototype.slide = function(a, d) {
        var e = this.$element.find(".item.active"),
            c = d || e[a](),
            h = this.interval,
            k = "next" == a ? "left" :
            "right",
            l = "next" == a ? "first" : "last",
            f = this;
        if (!c.length) {
            if (!this.options.wrap) return;
            c = this.$element.find(".item")[l]()
        }
        if (c.hasClass("active")) return this.sliding = !1;
        l = b.Event("slide.bs.carousel", {
            relatedTarget: c[0],
            direction: k
        });
        return this.$element.trigger(l), l.isDefaultPrevented() ? void 0 : (this.sliding = !0, h && this.pause(), this.$indicators.length && (this.$indicators.find(".active").removeClass("active"), this.$element.one("slid.bs.carousel", function() {
                var a = b(f.$indicators.children()[f.getActiveIndex()]);
                a && a.addClass("active")
            })), b.support.transition && this.$element.hasClass("slide") ? (c.addClass(a), c[0].offsetWidth, e.addClass(k), c.addClass(k), e.one(b.support.transition.end, function() {
                c.removeClass([a, k].join(" ")).addClass("active");
                e.removeClass(["active", k].join(" "));
                f.sliding = !1;
                setTimeout(function() {
                    f.$element.trigger("slid.bs.carousel")
                }, 0)
            }).emulateTransitionEnd(1E3 * e.css("transition-duration").slice(0, -1))) : (e.removeClass("active"), c.addClass("active"), this.sliding = !1, this.$element.trigger("slid.bs.carousel")),
            h && this.cycle(), this)
    };
    var f = b.fn.carousel;
    b.fn.carousel = function(a) {
        return this.each(function() {
            var d = b(this),
                e = d.data("bs.carousel"),
                g = b.extend({}, c.DEFAULTS, d.data(), "object" == typeof a && a),
                h = "string" == typeof a ? a : g.slide;
            e || d.data("bs.carousel", e = new c(this, g));
            "number" == typeof a ? e.to(a) : h ? e[h]() : g.interval && e.pause().cycle()
        })
    };
    b.fn.carousel.Constructor = c;
    b.fn.carousel.noConflict = function() {
        return b.fn.carousel = f, this
    };
    b(document).on("click.bs.carousel.data-api", "[data-slide], [data-slide-to]",
        function(a) {
            var d, e = b(this),
                c = b(e.attr("data-target") || (d = e.attr("href")) && d.replace(/.*(?=#[^\s]+$)/, ""));
            d = b.extend({}, c.data(), e.data());
            var h = e.attr("data-slide-to");
            h && (d.interval = !1);
            c.carousel(d);
            (h = e.attr("data-slide-to")) && c.data("bs.carousel").to(h);
            a.preventDefault()
        });
    b(window).on("load", function() {
        b('[data-ride="carousel"]').each(function() {
            var a = b(this);
            a.carousel(a.data())
        })
    })
}(jQuery); +
function(b) {
    var c = function(a, d) {
        this.$element = b(a);
        this.options = b.extend({}, c.DEFAULTS, d);
        this.transitioning = null;
        this.options.parent && (this.$parent = b(this.options.parent));
        this.options.toggle && this.toggle()
    };
    c.DEFAULTS = {
        toggle: !0
    };
    c.prototype.dimension = function() {
        return this.$element.hasClass("width") ? "width" : "height"
    };
    c.prototype.show = function() {
        if (!this.transitioning && !this.$element.hasClass("in")) {
            var a = b.Event("show.bs.collapse");
            if (this.$element.trigger(a), !a.isDefaultPrevented()) {
                if ((a = this.$parent &&
                        this.$parent.find("> .panel > .in")) && a.length) {
                    var d = a.data("bs.collapse");
                    if (d && d.transitioning) return;
                    a.collapse("hide");
                    d || a.data("bs.collapse", null)
                }
                var e = this.dimension();
                this.$element.removeClass("collapse").addClass("collapsing")[e](0);
                this.transitioning = 1;
                a = function() {
                    this.$element.removeClass("collapsing").addClass("collapse in")[e]("auto");
                    this.transitioning = 0;
                    this.$element.trigger("shown.bs.collapse")
                };
                if (!b.support.transition) return a.call(this);
                d = b.camelCase(["scroll", e].join("-"));
                this.$element.one(b.support.transition.end, b.proxy(a, this)).emulateTransitionEnd(350)[e](this.$element[0][d])
            }
        }
    };
    c.prototype.hide = function() {
        if (!this.transitioning && this.$element.hasClass("in")) {
            var a = b.Event("hide.bs.collapse");
            if (this.$element.trigger(a), !a.isDefaultPrevented()) {
                a = this.dimension();
                this.$element[a](this.$element[a]())[0].offsetHeight;
                this.$element.addClass("collapsing").removeClass("collapse").removeClass("in");
                this.transitioning = 1;
                var d = function() {
                    this.transitioning = 0;
                    this.$element.trigger("hidden.bs.collapse").removeClass("collapsing").addClass("collapse")
                };
                return b.support.transition ? void this.$element[a](0).one(b.support.transition.end, b.proxy(d, this)).emulateTransitionEnd(350) : d.call(this)
            }
        }
    };
    c.prototype.toggle = function() {
        this[this.$element.hasClass("in") ? "hide" : "show"]()
    };
    var f = b.fn.collapse;
    b.fn.collapse = function(a) {
        return this.each(function() {
            var d = b(this),
                e = d.data("bs.collapse"),
                g = b.extend({}, c.DEFAULTS, d.data(), "object" == typeof a && a);
            !e && g.toggle && "show" == a && (a = !a);
            e || d.data("bs.collapse", e = new c(this, g));
            "string" == typeof a && e[a]()
        })
    };
    b.fn.collapse.Constructor =
        c;
    b.fn.collapse.noConflict = function() {
        return b.fn.collapse = f, this
    };
    b(document).on("click.bs.collapse.data-api", "[data-toggle=collapse]", function(a) {
        var d, e = b(this);
        a = e.attr("data-target") || a.preventDefault() || (d = e.attr("href")) && d.replace(/.*(?=#[^\s]+$)/, "");
        d = b(a);
        var c = (a = d.data("bs.collapse")) ? "toggle" : e.data(),
            h = e.attr("data-parent"),
            k = h && b(h);
        a && a.transitioning || (k && k.find('[data-toggle=collapse][data-parent="' + h + '"]').not(e).addClass("collapsed"), e[d.hasClass("in") ? "addClass" : "removeClass"]("collapsed"));
        d.collapse(c)
    })
}(jQuery); +
function(b) {
    function c(e) {
        b(a).remove();
        b(d).each(function() {
            var a = f(b(this)),
                d = {
                    relatedTarget: this
                };
            a.hasClass("open") && (a.trigger(e = b.Event("hide.bs.dropdown", d)), e.isDefaultPrevented() || a.removeClass("open").trigger("hidden.bs.dropdown", d))
        })
    }

    function f(a) {
        var d = a.attr("data-target");
        d || (d = a.attr("href"), d = d && /#[A-Za-z]/.test(d) && d.replace(/.*(?=#[^\s]*$)/, ""));
        return (d = d && b(d)) && d.length ? d : a.parent()
    }
    var a = ".dropdown-backdrop",
        d = "[data-toggle=dropdown]",
        e = function(a) {
            b(a).on("click.bs.dropdown", this.toggle)
        };
    e.prototype.toggle = function(a) {
        var d = b(this);
        if (!d.is(".disabled, :disabled")) {
            var e = f(d),
                g = e.hasClass("open");
            if (c(), !g) {
                "ontouchstart" in document.documentElement && !e.closest(".navbar-nav").length && b('<div class="dropdown-backdrop"/>').insertAfter(b(this)).on("click", c);
                g = {
                    relatedTarget: this
                };
                if (e.trigger(a = b.Event("show.bs.dropdown", g)), a.isDefaultPrevented()) return;
                e.toggleClass("open").trigger("shown.bs.dropdown", g);
                d.focus()
            }
            return !1
        }
    };
    e.prototype.keydown = function(a) {
        if (/(38|40|27)/.test(a.keyCode)) {
            var e =
                b(this);
            if (a.preventDefault(), a.stopPropagation(), !e.is(".disabled, :disabled")) {
                var c = f(e),
                    g = c.hasClass("open");
                if (!g || g && 27 == a.keyCode) return 27 == a.which && c.find(d).focus(), e.click();
                e = c.find("[role=menu] li:not(.divider):visible a, [role=listbox] li:not(.divider):visible a");
                e.length && (c = e.index(e.filter(":focus")), 38 == a.keyCode && 0 < c && c--, 40 == a.keyCode && c < e.length - 1 && c++, ~c || (c = 0), e.eq(c).focus())
            }
        }
    };
    var g = b.fn.dropdown;
    b.fn.dropdown = function(a) {
        return this.each(function() {
            var d = b(this),
                c = d.data("bs.dropdown");
            c || d.data("bs.dropdown", c = new e(this));
            "string" == typeof a && c[a].call(d)
        })
    };
    b.fn.dropdown.Constructor = e;
    b.fn.dropdown.noConflict = function() {
        return b.fn.dropdown = g, this
    };
    b(document).on("click.bs.dropdown.data-api", c).on("click.bs.dropdown.data-api", ".dropdown form", function(a) {
        a.stopPropagation()
    }).on("click.bs.dropdown.data-api", d, e.prototype.toggle).on("keydown.bs.dropdown.data-api", d + ", [role=menu], [role=listbox]", e.prototype.keydown)
}(jQuery); +
function(b) {
    var c = function(a, d) {
        this.options = d;
        this.$element = b(a);
        this.$backdrop = this.isShown = null;
        this.options.remote && this.$element.find(".modal-content").load(this.options.remote, b.proxy(function() {
            this.$element.trigger("loaded.bs.modal")
        }, this))
    };
    c.DEFAULTS = {
        backdrop: !0,
        keyboard: !0,
        show: !0
    };
    c.prototype.toggle = function(a) {
        return this[this.isShown ? "hide" : "show"](a)
    };
    c.prototype.show = function(a) {
        var d = this,
            e = b.Event("show.bs.modal", {
                relatedTarget: a
            });
        this.$element.trigger(e);
        this.isShown || e.isDefaultPrevented() ||
            (this.isShown = !0, this.escape(), this.$element.on("click.dismiss.bs.modal", '[data-dismiss="modal"]', b.proxy(this.hide, this)), this.backdrop(function() {
                var e = b.support.transition && d.$element.hasClass("fade");
                d.$element.parent().length || d.$element.appendTo(document.body);
                d.$element.show().scrollTop(0);
                e && d.$element[0].offsetWidth;
                d.$element.addClass("in").attr("aria-hidden", !1);
                d.enforceFocus();
                var c = b.Event("shown.bs.modal", {
                    relatedTarget: a
                });
                e ? d.$element.find(".modal-dialog").one(b.support.transition.end,
                    function() {
                        d.$element.focus().trigger(c)
                    }).emulateTransitionEnd(300) : d.$element.focus().trigger(c)
            }))
    };
    c.prototype.hide = function(a) {
        a && a.preventDefault();
        a = b.Event("hide.bs.modal");
        this.$element.trigger(a);
        this.isShown && !a.isDefaultPrevented() && (this.isShown = !1, this.escape(), b(document).off("focusin.bs.modal"), this.$element.removeClass("in").attr("aria-hidden", !0).off("click.dismiss.bs.modal"), b.support.transition && this.$element.hasClass("fade") ? this.$element.one(b.support.transition.end, b.proxy(this.hideModal,
            this)).emulateTransitionEnd(300) : this.hideModal())
    };
    c.prototype.enforceFocus = function() {
        b(document).off("focusin.bs.modal").on("focusin.bs.modal", b.proxy(function(a) {
            this.$element[0] === a.target || this.$element.has(a.target).length || this.$element.focus()
        }, this))
    };
    c.prototype.escape = function() {
        this.isShown && this.options.keyboard ? this.$element.on("keyup.dismiss.bs.modal", b.proxy(function(a) {
            27 == a.which && this.hide()
        }, this)) : this.isShown || this.$element.off("keyup.dismiss.bs.modal")
    };
    c.prototype.hideModal =
        function() {
            var a = this;
            this.$element.hide();
            this.backdrop(function() {
                a.removeBackdrop();
                a.$element.trigger("hidden.bs.modal")
            })
        };
    c.prototype.removeBackdrop = function() {
        this.$backdrop && this.$backdrop.remove();
        this.$backdrop = null
    };
    c.prototype.backdrop = function(a) {
        var d = this.$element.hasClass("fade") ? "fade" : "";
        if (this.isShown && this.options.backdrop) {
            var e = b.support.transition && d;
            if (this.$backdrop = b('<div class="modal-backdrop ' + d + '" />').appendTo(document.body), this.$element.on("click.dismiss.bs.modal",
                    b.proxy(function(a) {
                        a.target === a.currentTarget && ("static" == this.options.backdrop ? this.$element[0].focus.call(this.$element[0]) : this.hide.call(this))
                    }, this)), e && this.$backdrop[0].offsetWidth, this.$backdrop.addClass("in"), a) e ? this.$backdrop.one(b.support.transition.end, a).emulateTransitionEnd(150) : a()
        } else !this.isShown && this.$backdrop ? (this.$backdrop.removeClass("in"), b.support.transition && this.$element.hasClass("fade") ? this.$backdrop.one(b.support.transition.end, a).emulateTransitionEnd(150) : a()) : a &&
            a()
    };
    var f = b.fn.modal;
    b.fn.modal = function(a, d) {
        return this.each(function() {
            var e = b(this),
                g = e.data("bs.modal"),
                h = b.extend({}, c.DEFAULTS, e.data(), "object" == typeof a && a);
            g || e.data("bs.modal", g = new c(this, h));
            "string" == typeof a ? g[a](d) : h.show && g.show(d)
        })
    };
    b.fn.modal.Constructor = c;
    b.fn.modal.noConflict = function() {
        return b.fn.modal = f, this
    };
    b(document).on("click.bs.modal.data-api", '[data-toggle="modal"]', function(a) {
        var d = b(this),
            e = d.attr("href"),
            c = b(d.attr("data-target") || e && e.replace(/.*(?=#[^\s]+$)/,
                ""));
        e = c.data("bs.modal") ? "toggle" : b.extend({
            remote: !/#/.test(e) && e
        }, c.data(), d.data());
        d.is("a") && a.preventDefault();
        c.modal(e, this).one("hide", function() {
            d.is(":visible") && d.focus()
        })
    });
    b(document).on("show.bs.modal", ".modal", function() {
        b(document.body).addClass("modal-open")
    }).on("hidden.bs.modal", ".modal", function() {
        b(document.body).removeClass("modal-open")
    })
}(jQuery); +
function(b) {
    var c = function(a, d) {
        this.type = this.options = this.enabled = this.timeout = this.hoverState = this.$element = null;
        this.init("tooltip", a, d)
    };
    c.DEFAULTS = {
        animation: !0,
        placement: "top",
        selector: !1,
        template: '<div class="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>',
        trigger: "hover focus",
        title: "",
        delay: 0,
        html: !1,
        container: !1
    };
    c.prototype.init = function(a, d, e) {
        this.enabled = !0;
        this.type = a;
        this.$element = b(d);
        this.options = this.getOptions(e);
        a = this.options.trigger.split(" ");
        for (d = a.length; d--;)
            if (e = a[d], "click" == e) this.$element.on("click." + this.type, this.options.selector, b.proxy(this.toggle, this));
            else if ("manual" != e) {
            var c = "hover" == e ? "mouseleave" : "focusout";
            this.$element.on(("hover" == e ? "mouseenter" : "focusin") + "." + this.type, this.options.selector, b.proxy(this.enter, this));
            this.$element.on(c + "." + this.type, this.options.selector, b.proxy(this.leave, this))
        }
        this.options.selector ? this._options = b.extend({}, this.options, {
            trigger: "manual",
            selector: ""
        }) : this.fixTitle()
    };
    c.prototype.getDefaults =
        function() {
            return c.DEFAULTS
        };
    c.prototype.getOptions = function(a) {
        return a = b.extend({}, this.getDefaults(), this.$element.data(), a), a.delay && "number" == typeof a.delay && (a.delay = {
            show: a.delay,
            hide: a.delay
        }), a
    };
    c.prototype.getDelegateOptions = function() {
        var a = {},
            d = this.getDefaults();
        return this._options && b.each(this._options, function(b, c) {
            d[b] != c && (a[b] = c)
        }), a
    };
    c.prototype.enter = function(a) {
        var d = a instanceof this.constructor ? a : b(a.currentTarget)[this.type](this.getDelegateOptions()).data("bs." + this.type);
        return clearTimeout(d.timeout), d.hoverState = "in", d.options.delay && d.options.delay.show ? void(d.timeout = setTimeout(function() {
            "in" == d.hoverState && d.show()
        }, d.options.delay.show)) : d.show()
    };
    c.prototype.leave = function(a) {
        var d = a instanceof this.constructor ? a : b(a.currentTarget)[this.type](this.getDelegateOptions()).data("bs." + this.type);
        return clearTimeout(d.timeout), d.hoverState = "out", d.options.delay && d.options.delay.hide ? void(d.timeout = setTimeout(function() {
                "out" == d.hoverState && d.hide()
            }, d.options.delay.hide)) :
            d.hide()
    };
    c.prototype.show = function() {
        var a = b.Event("show.bs." + this.type);
        if (this.hasContent() && this.enabled && (this.$element.trigger(a), !a.isDefaultPrevented())) {
            var d = this;
            a = this.tip();
            this.setContent();
            this.options.animation && a.addClass("fade");
            var e = "function" == typeof this.options.placement ? this.options.placement.call(this, a[0], this.$element[0]) : this.options.placement,
                c = /\s?auto?\s?/i,
                h = c.test(e);
            h && (e = e.replace(c, "") || "top");
            a.detach().css({
                top: 0,
                left: 0,
                display: "block"
            }).addClass(e);
            this.options.container ?
                a.appendTo(this.options.container) : a.insertAfter(this.$element);
            c = this.getPosition();
            var f = a[0].offsetWidth,
                l = a[0].offsetHeight;
            if (h) {
                var m = this.$element.parent();
                h = e;
                var n = document.documentElement.scrollTop || document.body.scrollTop,
                    p = "body" == this.options.container ? window.innerWidth : m.outerWidth(),
                    q = "body" == this.options.container ? window.innerHeight : m.outerHeight();
                m = "body" == this.options.container ? 0 : m.offset().left;
                e = "bottom" == e && c.top + c.height + l - n > q ? "top" : "top" == e && 0 > c.top - n - l ? "bottom" : "right" == e &&
                    c.right + f > p ? "left" : "left" == e && c.left - f < m ? "right" : e;
                a.removeClass(h).addClass(e)
            }
            c = this.getCalculatedOffset(e, c, f, l);
            this.applyPlacement(c, e);
            this.hoverState = null;
            e = function() {
                d.$element.trigger("shown.bs." + d.type)
            };
            b.support.transition && this.$tip.hasClass("fade") ? a.one(b.support.transition.end, e).emulateTransitionEnd(150) : e()
        }
    };
    c.prototype.applyPlacement = function(a, d) {
        var e, c = this.tip(),
            h = c[0].offsetWidth,
            f = c[0].offsetHeight,
            l = parseInt(c.css("margin-top"), 10),
            m = parseInt(c.css("margin-left"), 10);
        isNaN(l) &&
            (l = 0);
        isNaN(m) && (m = 0);
        a.top += l;
        a.left += m;
        b.offset.setOffset(c[0], b.extend({
            using: function(a) {
                c.css({
                    top: Math.round(a.top),
                    left: Math.round(a.left)
                })
            }
        }, a), 0);
        c.addClass("in");
        l = c[0].offsetWidth;
        m = c[0].offsetHeight;
        ("top" == d && m != f && (e = !0, a.top = a.top + f - m), /bottom|top/.test(d)) ? (f = 0, 0 > a.left && (f = -2 * a.left, a.left = 0, c.offset(a), l = c[0].offsetWidth, m = c[0].offsetHeight), this.replaceArrow(f - h + l, l, "left")) : this.replaceArrow(m - f, m, "top");
        e && c.offset(a)
    };
    c.prototype.replaceArrow = function(a, d, b) {
        this.arrow().css(b,
            a ? 50 * (1 - a / d) + "%" : "")
    };
    c.prototype.setContent = function() {
        var a = this.tip(),
            d = this.getTitle();
        a.find(".tooltip-inner")[this.options.html ? "html" : "text"](d);
        a.removeClass("fade in top bottom left right")
    };
    c.prototype.hide = function() {
        function a() {
            "in" != d.hoverState && e.detach();
            d.$element.trigger("hidden.bs." + d.type)
        }
        var d = this,
            e = this.tip(),
            c = b.Event("hide.bs." + this.type);
        return this.$element.trigger(c), c.isDefaultPrevented() ? void 0 : (e.removeClass("in"), b.support.transition && this.$tip.hasClass("fade") ? e.one(b.support.transition.end,
            a).emulateTransitionEnd(150) : a(), this.hoverState = null, this)
    };
    c.prototype.fixTitle = function() {
        var a = this.$element;
        (a.attr("title") || "string" != typeof a.attr("data-original-title")) && a.attr("data-original-title", a.attr("title") || "").attr("title", "")
    };
    c.prototype.hasContent = function() {
        return this.getTitle()
    };
    c.prototype.getPosition = function() {
        var a = this.$element[0];
        return b.extend({}, "function" == typeof a.getBoundingClientRect ? a.getBoundingClientRect() : {
            width: a.offsetWidth,
            height: a.offsetHeight
        }, this.$element.offset())
    };
    c.prototype.getCalculatedOffset = function(a, d, b, c) {
        return "bottom" == a ? {
            top: d.top + d.height,
            left: d.left + d.width / 2 - b / 2
        } : "top" == a ? {
            top: d.top - c,
            left: d.left + d.width / 2 - b / 2
        } : "left" == a ? {
            top: d.top + d.height / 2 - c / 2,
            left: d.left - b
        } : {
            top: d.top + d.height / 2 - c / 2,
            left: d.left + d.width
        }
    };
    c.prototype.getTitle = function() {
        var a = this.$element,
            b = this.options;
        return a.attr("data-original-title") || ("function" == typeof b.title ? b.title.call(a[0]) : b.title)
    };
    c.prototype.tip = function() {
        return this.$tip = this.$tip || b(this.options.template)
    };
    c.prototype.arrow = function() {
        return this.$arrow = this.$arrow || this.tip().find(".tooltip-arrow")
    };
    c.prototype.validate = function() {
        this.$element[0].parentNode || (this.hide(), this.$element = null, this.options = null)
    };
    c.prototype.enable = function() {
        this.enabled = !0
    };
    c.prototype.disable = function() {
        this.enabled = !1
    };
    c.prototype.toggleEnabled = function() {
        this.enabled = !this.enabled
    };
    c.prototype.toggle = function(a) {
        a = a ? b(a.currentTarget)[this.type](this.getDelegateOptions()).data("bs." + this.type) : this;
        a.tip().hasClass("in") ?
            a.leave(a) : a.enter(a)
    };
    c.prototype.destroy = function() {
        clearTimeout(this.timeout);
        this.hide().$element.off("." + this.type).removeData("bs." + this.type)
    };
    var f = b.fn.tooltip;
    b.fn.tooltip = function(a) {
        return this.each(function() {
            var d = b(this),
                e = d.data("bs.tooltip"),
                g = "object" == typeof a && a;
            (e || "destroy" != a) && (e || d.data("bs.tooltip", e = new c(this, g)), "string" == typeof a && e[a]())
        })
    };
    b.fn.tooltip.Constructor = c;
    b.fn.tooltip.noConflict = function() {
        return b.fn.tooltip = f, this
    }
}(jQuery); +
function(b) {
    var c = function(a, b) {
        this.init("popover", a, b)
    };
    if (!b.fn.tooltip) throw Error("Popover requires tooltip.js");
    c.DEFAULTS = b.extend({}, b.fn.tooltip.Constructor.DEFAULTS, {
        placement: "right",
        trigger: "click",
        content: "",
        template: '<div class="popover"><div class="arrow"></div><h3 class="popover-title"></h3><div class="popover-content"></div></div>'
    });
    c.prototype = b.extend({}, b.fn.tooltip.Constructor.prototype);
    c.prototype.constructor = c;
    c.prototype.getDefaults = function() {
        return c.DEFAULTS
    };
    c.prototype.setContent =
        function() {
            var a = this.tip(),
                b = this.getTitle(),
                c = this.getContent();
            a.find(".popover-title")[this.options.html ? "html" : "text"](b);
            a.find(".popover-content")[this.options.html ? "string" == typeof c ? "html" : "append" : "text"](c);
            a.removeClass("fade top bottom left right in");
            a.find(".popover-title").html() || a.find(".popover-title").hide()
        };
    c.prototype.hasContent = function() {
        return this.getTitle() || this.getContent()
    };
    c.prototype.getContent = function() {
        var a = this.$element,
            b = this.options;
        return a.attr("data-content") ||
            ("function" == typeof b.content ? b.content.call(a[0]) : b.content)
    };
    c.prototype.arrow = function() {
        return this.$arrow = this.$arrow || this.tip().find(".arrow")
    };
    c.prototype.tip = function() {
        return this.$tip || (this.$tip = b(this.options.template)), this.$tip
    };
    var f = b.fn.popover;
    b.fn.popover = function(a) {
        return this.each(function() {
            var d = b(this),
                e = d.data("bs.popover"),
                g = "object" == typeof a && a;
            (e || "destroy" != a) && (e || d.data("bs.popover", e = new c(this, g)), "string" == typeof a && e[a]())
        })
    };
    b.fn.popover.Constructor = c;
    b.fn.popover.noConflict =
        function() {
            return b.fn.popover = f, this
        }
}(jQuery); +
function(b) {
    function c(a, d) {
        var e, g = b.proxy(this.process, this);
        this.$element = b(b(a).is("body") ? window : a);
        this.$body = b("body");
        this.$scrollElement = this.$element.on("scroll.bs.scroll-spy.data-api", g);
        this.options = b.extend({}, c.DEFAULTS, d);
        this.selector = (this.options.target || (e = b(a).attr("href")) && e.replace(/.*(?=#[^\s]+$)/, "") || "") + " .nav li > a";
        this.offsets = b([]);
        this.targets = b([]);
        this.activeTarget = null;
        this.refresh();
        this.process()
    }
    c.DEFAULTS = {
        offset: 10
    };
    c.prototype.refresh = function() {
        var a = this.$element[0] ==
            window ? "offset" : "position";
        this.offsets = b([]);
        this.targets = b([]);
        var d = this;
        this.$body.find(this.selector).map(function() {
            var c = b(this);
            c = c.data("target") || c.attr("href");
            var g = /^#./.test(c) && b(c);
            return g && g.length && g.is(":visible") && [
                [g[a]().top + (!b.isWindow(d.$scrollElement.get(0)) && d.$scrollElement.scrollTop()), c]
            ] || null
        }).sort(function(a, b) {
            return a[0] - b[0]
        }).each(function() {
            d.offsets.push(this[0]);
            d.targets.push(this[1])
        })
    };
    c.prototype.process = function() {
        var a, b = this.$scrollElement.scrollTop() +
            this.options.offset,
            c = (this.$scrollElement[0].scrollHeight || this.$body[0].scrollHeight) - this.$scrollElement.height(),
            g = this.offsets,
            f = this.targets,
            k = this.activeTarget;
        if (b >= c) return k != (a = f.last()[0]) && this.activate(a);
        if (k && b <= g[0]) return k != (a = f[0]) && this.activate(a);
        for (a = g.length; a--;) k != f[a] && b >= g[a] && (!g[a + 1] || b <= g[a + 1]) && this.activate(f[a])
    };
    c.prototype.activate = function(a) {
        this.activeTarget = a;
        b(this.selector).parentsUntil(this.options.target, ".active").removeClass("active");
        a = b(this.selector +
            '[data-target="' + a + '"],' + this.selector + '[href="' + a + '"]').parents("li").addClass("active");
        a.parent(".dropdown-menu").length && (a = a.closest("li.dropdown").addClass("active"));
        a.trigger("activate.bs.scrollspy")
    };
    var f = b.fn.scrollspy;
    b.fn.scrollspy = function(a) {
        return this.each(function() {
            var d = b(this),
                e = d.data("bs.scrollspy"),
                g = "object" == typeof a && a;
            e || d.data("bs.scrollspy", e = new c(this, g));
            "string" == typeof a && e[a]()
        })
    };
    b.fn.scrollspy.Constructor = c;
    b.fn.scrollspy.noConflict = function() {
        return b.fn.scrollspy =
            f, this
    };
    b(window).on("load", function() {
        b('[data-spy="scroll"]').each(function() {
            var a = b(this);
            a.scrollspy(a.data())
        })
    })
}(jQuery); +
function(b) {
    var c = function(a) {
        this.element = b(a)
    };
    c.prototype.show = function() {
        var a = this.element,
            d = a.closest("ul:not(.dropdown-menu)"),
            c = a.data("target");
        if (c || (c = a.attr("href"), c = c && c.replace(/.*(?=#[^\s]*$)/, "")), !a.parent("li").hasClass("active")) {
            var g = d.find(".active:last a")[0],
                f = b.Event("show.bs.tab", {
                    relatedTarget: g
                });
            (a.trigger(f), f.isDefaultPrevented()) || (c = b(c), this.activate(a.parent("li"), d), this.activate(c, c.parent(), function() {
                a.trigger({
                    type: "shown.bs.tab",
                    relatedTarget: g
                })
            }))
        }
    };
    c.prototype.activate =
        function(a, c, e) {
            function d() {
                f.removeClass("active").find("> .dropdown-menu > .active").removeClass("active");
                a.addClass("active");
                k ? (a[0].offsetWidth, a.addClass("in")) : a.removeClass("fade");
                a.parent(".dropdown-menu") && a.closest("li.dropdown").addClass("active");
                e && e()
            }
            var f = c.find("> .active"),
                k = e && b.support.transition && f.hasClass("fade");
            k ? f.one(b.support.transition.end, d).emulateTransitionEnd(150) : d();
            f.removeClass("in")
        };
    var f = b.fn.tab;
    b.fn.tab = function(a) {
        return this.each(function() {
            var d = b(this),
                e = d.data("bs.tab");
            e || d.data("bs.tab", e = new c(this));
            "string" == typeof a && e[a]()
        })
    };
    b.fn.tab.Constructor = c;
    b.fn.tab.noConflict = function() {
        return b.fn.tab = f, this
    };
    b(document).on("click.bs.tab.data-api", '[data-toggle="tab"], [data-toggle="pill"]', function(a) {
        a.preventDefault();
        b(this).tab("show")
    })
}(jQuery); +
function(b) {
    var c = function(a, d) {
        this.options = b.extend({}, c.DEFAULTS, d);
        this.$window = b(window).on("scroll.bs.affix.data-api", b.proxy(this.checkPosition, this)).on("click.bs.affix.data-api", b.proxy(this.checkPositionWithEventLoop, this));
        this.$element = b(a);
        this.affixed = this.unpin = this.pinnedOffset = null;
        this.checkPosition()
    };
    c.RESET = "affix affix-top affix-bottom";
    c.DEFAULTS = {
        offset: 0
    };
    c.prototype.getPinnedOffset = function() {
        if (this.pinnedOffset) return this.pinnedOffset;
        this.$element.removeClass(c.RESET).addClass("affix");
        var a = this.$window.scrollTop();
        return this.pinnedOffset = this.$element.offset().top - a
    };
    c.prototype.checkPositionWithEventLoop = function() {
        setTimeout(b.proxy(this.checkPosition, this), 1)
    };
    c.prototype.checkPosition = function() {
        if (this.$element.is(":visible")) {
            var a = b(document).height(),
                d = this.$window.scrollTop(),
                e = this.$element.offset(),
                g = this.options.offset,
                f = g.top,
                k = g.bottom;
            "top" == this.affixed && (e.top += d);
            "object" != typeof g && (k = f = g);
            "function" == typeof f && (f = g.top(this.$element));
            "function" == typeof k &&
                (k = g.bottom(this.$element));
            d = null != this.unpin && d + this.unpin <= e.top ? !1 : null != k && e.top + this.$element.height() >= a - k ? "bottom" : null != f && f >= d ? "top" : !1;
            this.affixed !== d && (this.unpin && this.$element.css("top", ""), e = "affix" + (d ? "-" + d : ""), g = b.Event(e + ".bs.affix"), this.$element.trigger(g), g.isDefaultPrevented() || (this.affixed = d, this.unpin = "bottom" == d ? this.getPinnedOffset() : null, this.$element.removeClass(c.RESET).addClass(e).trigger(b.Event(e.replace("affix", "affixed"))), "bottom" == d && this.$element.offset({
                top: a -
                    k - this.$element.height()
            })))
        }
    };
    var f = b.fn.affix;
    b.fn.affix = function(a) {
        return this.each(function() {
            var d = b(this),
                e = d.data("bs.affix"),
                f = "object" == typeof a && a;
            e || d.data("bs.affix", e = new c(this, f));
            "string" == typeof a && e[a]()
        })
    };
    b.fn.affix.Constructor = c;
    b.fn.affix.noConflict = function() {
        return b.fn.affix = f, this
    };
    b(window).on("load", function() {
        b('[data-spy="affix"]').each(function() {
            var a = b(this),
                c = a.data();
            c.offset = c.offset || {};
            c.offsetBottom && (c.offset.bottom = c.offsetBottom);
            c.offsetTop && (c.offset.top =
                c.offsetTop);
            a.affix(c)
        })
    })
}(jQuery);